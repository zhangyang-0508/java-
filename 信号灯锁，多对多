import java.util.Random;
import java.util.concurrent.Semaphore;
import java.util.concurrent.TimeUnit;
//多对多，抢车位，信号灯，可伸缩  可以代替Synchronized
public class SemaphoreDemo {

    public static void main(String[] args) {

        Semaphore semaphore = new Semaphore(3);
        for (int i = 1; i <=6; i++) {//模拟六部汽车
            new Thread(()->{
                try{
                semaphore.acquire();//抢到车位
                System.out.println(Thread.currentThread().getName()+"\t 抢到车位");
                TimeUnit.SECONDS.sleep(new Random().nextInt(3));//停车的时间
                System.out.println(Thread.currentThread().getName()+"\t 停车三秒后离开车位");
            } catch (Exception e) {
                e.printStackTrace();
            } finally{
                semaphore.release();

            }
            },String.valueOf(i)).start();

        }
    }
}
