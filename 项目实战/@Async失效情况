1、注解@Async的方法不是public方法
2、注解@Async的返回值只能为void或者Future
3、注解@Async方法使用static修饰也会失效
4、spring无法扫描到异步类，没加注解@Async  或 @EnableAsync注解
5、调用方与被调方不能在同一个类
Spring 在扫描bean的时候会扫描方法上是否包含@Async注解，动态地生成一个子类（即proxy代理类），当这个有注解的方法被调用的时候，实际上是由代理类来调用的，代理类在调用时增加异步作用。
如果这个有注解的方法是被同一个类中的其他方法调用的，那么该方法的调用并没有通过代理类，而是直接通过原来的那个 bean，所以就失效了。
所以调用方与被调方不能在同一个类，主要是使用了动态代理，同一个类的时候直接调用，不是通过生成的动态代理类调用。
一般将要异步执行的方法单独抽取成一个类。
6、类中需要使用@Autowired或@Resource等注解自动注入，不能自己手动new对象
7、在Async 方法上标注@Transactional是没用的，但在Async 方法调用的方法上标注@Transactional 是有效的
附说明
直接使用 @Async 注解没指定线程池的话，即未设置TaskExecutor时
默认使用Spring创建ThreadPoolTaskExecutor
核心线程数：8
最大线程数：Integer.MAX_VALUE ( 21亿多)
队列使用LinkedBlockingQueue
容量是：Integer.MAX_VALUE
空闲线程保留时间：60s
线程池拒绝策略：AbortPolicy
