Singleton单例设计模式：  某个类在整个系统种只能有一个实例对象，可被获取和使用的代码模式    例如：代表JVM运行环境的Runtime类
1，私有化构造器
2，自行创建，并且用静态变量保存
3，向外提供整个实例
4，强调这个一个单例，我们可以用final修改
懒汉模式：直接创建对象，不存在线程安全问题
  1，直接实例化饿汉式（简洁直观）
  2，枚举式（最简洁）
  3，静态代码块饿汉式（适合复杂实例化）
懒汉式：延迟创建对象
  1，线程不安全（适合于单线程）
  2，线程安全（适用于多线程）
  3，静态内部类形式（适用于多线程）（最简洁）

3：类初始化和实例初始化
  1，类初始化过程
        1，一个类要创建实例需要先加载并初始化该类  main方法所在的类需要先加载和初始化
        2，一个子类要初始化需要先初始化父类
        3，一个类初始化就是要执行<clinit>()方法
          <clinit>()方法由静态类变量显示赋值代码和静态代码块租场
          类变量显示赋值代码和静态代码块代码从上到下顺序执行
          <clinit>()方法只执行一次
